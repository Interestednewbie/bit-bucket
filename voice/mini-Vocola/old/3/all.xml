<?xml version="1.0" encoding="windows-1252"?>

<!DOCTYPE MyCommands SYSTEM "http://www.scansoft.com/NaturallySpeaking/Support/MyCommands/MyCmds11.dtd">

<MyCommands version="2.0" language="0x409">


	<Commands type="application">
		<module>natspeak</module>
		<company>ScanSoft</company>
		<description>Dragon NaturallySpeaking for Windows</description>

		<Command name="test command" group="experiment" enabled="true" states="">
			<description>leap to first occurrence of named text in named direction</description>
			<contents type="SCRIPT">
<![CDATA[Sub Main
	SendDragonKeys "foo"
End Sub
]]>
			</contents>
		</Command>

	</Commands>

	<Commands type="application">
		<module>WINWORD</module>
		<company>Microsoft Corporation</company>
		<description>Microsoft Office Word</description>

		<Command name="[word-compass-rose]" group="word compass rose" enabled="true" states="">
			<description>repeat word compass rose command once</description>
			<contents type="SCRIPT">
<![CDATA[Sub Main
	argument = 1
'	argument = Val(Left$(ListVar2,InStr(ListVar2+"\","\")-1))

	command_info = Left$(ListVar1,InStr(ListVar1+"\","\")-1)
	go_forward = IIf(Mid$(command_info,1,1) = "+", True, False)
	target_start = IIf(Mid$(command_info,2,1) = "s", True, False)
	action = Mid$(command_info,3,1)

	' look at text ahead of point in direction direction:
	ahead = word_peek(go_forward)
	If ahead = "" Then
		' nothing ahead or peek failed; abort
		Beep
		Exit Sub
	End If

	' calculate offset to targeted point:
	If Not go_forward Then
		ahead = StrReverse(ahead)
		target_start = Not target_start
	End If
	offset = 0
	For I = 1 To argument
		If target_start Then
			offset = word_start(ahead, offset)
		Else
			offset = word_end(ahead, offset)
		End If
		If offset < 0 Then
			Exit For
		End If
	Next

	If offset < 0 Then
		' no target found
		Beep
		Exit Sub
	End If

	' compute text covered between point and target (from left to right)
	covered = Left$(ahead, offset)
	If Not go_forward Then
		covered = StrReverse(covered)
	End If

	If action = "m" Then
		keys = move(go_forward, offset)
	ElseIf action = "d" Then
		keys = delete(go_forward, offset)
		Clipboard(covered)
	Else
		Beep
	End If

	SendDragonKeys keys

	' for debugging:
	ahead = Replace(ahead, " ", ".")
	ahead = Replace(ahead, Chr(13), "!")
	' MsgBox "'" + ahead + "' " + Len(ahead) + " " + Str(offset) + " '" + covered + "'"
End Sub


Function repeat_keys(forward_prefix, backward_prefix, go_forward, distance) As String
	If distance < 0 Then
		go_forward = Not go_forward
		distance = -distance
	End If

	repeat_keys = "{" + IIf(go_forward, forward_prefix, backward_prefix) + Str(distance) + "}"
End Function

Function move(go_forward, distance) As String
	move = repeat_keys("right", "left", go_forward, distance)
End Function

Function select_move(go_forward, distance) As String
	select_move = repeat_keys("shift+right", "shift+left", go_forward, distance)
End Function

Function delete(go_forward, distance) As String
	delete = repeat_keys("Del", "backspace", go_forward, distance)
End Function


' is character a word separator?  I.e., does it occur between words rather than in them
Function is_separator_character(character) As Boolean
	If InStr("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'$%", character) = 0 Then
		is_separator_character = True
	Else
		is_separator_character = False
	End If
End Function

Function word_start(selection, offset) As Integer
	previous_is_separator = False
	While offset < Len(selection)
		character = Mid(selection, offset+1, 1)
		current_is_separator = is_separator_character(character)
		If previous_is_separator And (Not current_is_separator) Then
			word_start = offset
			Exit Function
		End If
		offset = offset + 1
		previous_is_separator = current_is_separator
	Wend

	word_start = -1
End Function

Function word_end(selection, offset) As Integer
	previous_is_separator = True
	While offset < Len(selection)
		character = Mid(selection, offset+1, 1)
		current_is_separator = is_separator_character(character)
		If (Not previous_is_separator) And current_is_separator Then
			word_end = offset
			Exit Function
		End If
		offset = offset + 1
		previous_is_separator = current_is_separator
	Wend

	word_end = -1
End Function


' peek functions =======================================================

Function word_peek(go_forward) As String
'	this version of peek is optimized for word; it may not work for any other application

'	this function may change what line Word's cursor is on, but not where the point is located
'	  (when the point is at the beginning of a line, the cursor may be at the beginning of that line or the far end
'	   (beyond the newline or space) of the previous Line.)

'	old = Clipboard()
	Clipboard("")  ' in case copy fails

	trust_ending_return = False
	If go_forward Then
		' arbitrary extension below is OK so long as it guarantees a non-zero Word selection (the Clipboard may be empty):
		SendDragonKeys "{shift+end}{shift+right 2}{shift+end}{shift+right 2}{ctrl+c}"
	'SendDragonKeys "{shift+end}{shift+right 2}{ctrl+c}"
		selection = Replace$(Clipboard(), Chr(10), "")
		If selection = "" Then
			selection = Chr(13)  ' all Word documents end with a new line
		End If
	Else
		' below must produce at most one carriage return:
		SendDragonKeys "{shift+home}{shift+left}{shift+home}{ctrl+c}"
		selection = Replace$(Clipboard(), Chr(10), "")
		If InStr(selection, Chr(13)) >= Len(selection) Then
			trust_ending_return = True
		End If
	End If

	If selection = "" Then
		word_peek = ""
		Exit Function
	End If

	If (Not trust_ending_return) And (Len(selection) > 0) Then
		If Mid$(selection, Len(selection), 1) = Chr(13) Then
			selection = Left$(selection, Len(selection)-1)
		End If
	End If
	word_peek = selection

	' undo selection, leaving point in original location
	SendDragonKeys move(Not go_forward, 1)
End Function


Function peek3(go_forward) As String
'	this should work for anything except (in rare cases) command browser
'	  (can fail on lines with more than eight spaces or tabs at the beginning)
'	requires a modifiable field, leaves spaces if field doesn't support {ctrl+c}

'	old = Clipboard()
	Clipboard("")  ' in case copy fails

	fixup = ""
	extra_end = 0
	extra_front = 0
	If go_forward Then
		keys = "<>{left}{shift+end}{shift+left}"
		fixup = "{backspace}{Del}"
		extra_front = 1
	Else
		keys = "<>{left}{shift+home}"
		fixup = "{backspace}{Del}"
		extra_end = 1
	End If

	SendDragonKeys keys + "{ctrl+c}"
	selection = Replace$(Clipboard(), Chr(10), "")

	If selection = "" Then
		peek3 = ""
		Exit Function
	End If

	fixup = select_move(Not go_forward, Len(selection)) + fixup

	selection = Left(selection, Len(selection)-extra_end)
	peek3 = Right(selection, Len(selection)-extra_front)

	' undo selection, leaving point in original location
	SendDragonKeys fixup
End Function
]]>
			</contents>
		</Command>

		<Command name="[word-compass-rose] [1to100]" group="word compass rose" enabled="true" states="">
			<description>repeat global word compass rose command N times</description>
			<contents type="SCRIPT">
<![CDATA[Sub Main
'	argument = 1
	argument = Val(Left$(ListVar2,InStr(ListVar2+"\","\")-1))

	command_info = Left$(ListVar1,InStr(ListVar1+"\","\")-1)
	go_forward = IIf(Mid$(command_info,1,1) = "+", True, False)
	target_start = IIf(Mid$(command_info,2,1) = "s", True, False)
	action = Mid$(command_info,3,1)

	' look at text ahead of point in direction direction:
	ahead = word_peek(go_forward)
	If ahead = "" Then
		' nothing ahead or peek failed; abort
		Beep
		Exit Sub
	End If

	' calculate offset to targeted point:
	If Not go_forward Then
		ahead = StrReverse(ahead)
		target_start = Not target_start
	End If
	offset = 0
	For I = 1 To argument
		If target_start Then
			offset = word_start(ahead, offset)
		Else
			offset = word_end(ahead, offset)
		End If
		If offset < 0 Then
			Exit For
		End If
	Next

	If offset < 0 Then
		' no target found
		Beep
		Exit Sub
	End If

	' compute text covered between point and target (from left to right)
	covered = Left$(ahead, offset)
	If Not go_forward Then
		covered = StrReverse(covered)
	End If

	If action = "m" Then
		keys = move(go_forward, offset)
	ElseIf action = "d" Then
		keys = delete(go_forward, offset)
		Clipboard(covered)
	Else
		Beep
	End If

	SendDragonKeys keys

	' for debugging:
	ahead = Replace(ahead, " ", ".")
	ahead = Replace(ahead, Chr(13), "!")
	' MsgBox "'" + ahead + "' " + Len(ahead) + " " + Str(offset) + " '" + covered + "'"
End Sub


Function repeat_keys(forward_prefix, backward_prefix, go_forward, distance) As String
	If distance < 0 Then
		go_forward = Not go_forward
		distance = -distance
	End If

	repeat_keys = "{" + IIf(go_forward, forward_prefix, backward_prefix) + Str(distance) + "}"
End Function

Function move(go_forward, distance) As String
	move = repeat_keys("right", "left", go_forward, distance)
End Function

Function select_move(go_forward, distance) As String
	select_move = repeat_keys("shift+right", "shift+left", go_forward, distance)
End Function

Function delete(go_forward, distance) As String
	delete = repeat_keys("Del", "backspace", go_forward, distance)
End Function


' is character a word separator?  I.e., does it occur between words rather than in them
Function is_separator_character(character) As Boolean
	If InStr("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'$%", character) = 0 Then
		is_separator_character = True
	Else
		is_separator_character = False
	End If
End Function

Function word_start(selection, offset) As Integer
	previous_is_separator = False
	While offset < Len(selection)
		character = Mid(selection, offset+1, 1)
		current_is_separator = is_separator_character(character)
		If previous_is_separator And (Not current_is_separator) Then
			word_start = offset
			Exit Function
		End If
		offset = offset + 1
		previous_is_separator = current_is_separator
	Wend

	word_start = -1
End Function

Function word_end(selection, offset) As Integer
	previous_is_separator = True
	While offset < Len(selection)
		character = Mid(selection, offset+1, 1)
		current_is_separator = is_separator_character(character)
		If (Not previous_is_separator) And current_is_separator Then
			word_end = offset
			Exit Function
		End If
		offset = offset + 1
		previous_is_separator = current_is_separator
	Wend

	word_end = -1
End Function


' peek functions =======================================================

Function word_peek(go_forward) As String
'	this version of peek is optimized for word; it may not work for any other application

'	this function may change what line Word's cursor is on, but not where the point is located
'	  (when the point is at the beginning of a line, the cursor may be at the beginning of that line or the far end
'	   (beyond the newline or space) of the previous Line.)

'	old = Clipboard()
	Clipboard("")  ' in case copy fails

	trust_ending_return = False
	If go_forward Then
		' arbitrary extension below is OK so long as it guarantees a non-zero Word selection (the Clipboard may be empty):
		SendDragonKeys "{shift+end}{shift+right 2}{shift+end}{shift+right 2}{ctrl+c}"
	'SendDragonKeys "{shift+end}{shift+right 2}{ctrl+c}"
		selection = Replace$(Clipboard(), Chr(10), "")
		If selection = "" Then
			selection = Chr(13)  ' all Word documents end with a new line
		End If
	Else
		' below must produce at most one carriage return:
		SendDragonKeys "{shift+home}{shift+left}{shift+home}{ctrl+c}"
		selection = Replace$(Clipboard(), Chr(10), "")
		If InStr(selection, Chr(13)) >= Len(selection) Then
			trust_ending_return = True
		End If
	End If

	If selection = "" Then
		word_peek = ""
		Exit Function
	End If

	If (Not trust_ending_return) And (Len(selection) > 0) Then
		If Mid$(selection, Len(selection), 1) = Chr(13) Then
			selection = Left$(selection, Len(selection)-1)
		End If
	End If
	word_peek = selection

	' undo selection, leaving point in original location
	SendDragonKeys move(Not go_forward, 1)
End Function


Function peek3(go_forward) As String
'	this should work for anything except (in rare cases) command browser
'	  (can fail on lines with more than eight spaces or tabs at the beginning)
'	requires a modifiable field, leaves spaces if field doesn't support {ctrl+c}

'	old = Clipboard()
	Clipboard("")  ' in case copy fails

	fixup = ""
	extra_end = 0
	extra_front = 0
	If go_forward Then
		keys = "<>{left}{shift+end}{shift+left}"
		fixup = "{backspace}{Del}"
		extra_front = 1
	Else
		keys = "<>{left}{shift+home}"
		fixup = "{backspace}{Del}"
		extra_end = 1
	End If

	SendDragonKeys keys + "{ctrl+c}"
	selection = Replace$(Clipboard(), Chr(10), "")

	If selection = "" Then
		peek3 = ""
		Exit Function
	End If

	fixup = select_move(Not go_forward, Len(selection)) + fixup

	selection = Left(selection, Len(selection)-extra_end)
	peek3 = Right(selection, Len(selection)-extra_front)

	' undo selection, leaving point in original location
	SendDragonKeys fixup
End Function
]]>
			</contents>
		</Command>

		<Command name="[g-leap-command] [printable] [printable]" group="on screen navigation" enabled="true" states="">
			<description>leap to first occurrence of named text in named direction</description>
			<contents type="SCRIPT">
<![CDATA[Sub Main
	leap_command = Left$(ListVar1,InStr(ListVar1+"\","\")-1)
	direction = Left$(leap_command, 1)
	end_point = Mid$(leap_command, 2)

	keys = "{ctrl+f}"
	If direction = "d" Then
		keys = "{right}" + keys
	End If

	For index = 1 To UtilityProvider.ContextValueCount-1
		parameter = UtilityProvider.ContextValue(index)

		' get written form, treating list entries "\" and "backslash" as a backslash:
		printable = Left$(parameter,InStr(2, parameter +"\","\")-1)
		If printable = "backslash" Then
			printable = "\"
		End If
		keys = keys + printable
	Next

	' {alt+shift+:}{esc} here cancels a pop-up dialog box other than the find dialog box
	SendDragonKeys keys + "{alt+m}{alt+shift+:}" + direction + "{enter}{alt+f}{alt+shift+:}{esc}{esc}"
	' need to give Word time to close find dialog box
	SendDragonKeys end_point
End Sub
]]>
			</contents>
		</Command>

		<Command name="[g-leap-command] [printable] [printable] [printable]" group="on screen navigation" enabled="true" states="">
			<description>leap to first occurrence of named text in named direction</description>
			<contents type="SCRIPT">
<![CDATA[Sub Main
	leap_command = Left$(ListVar1,InStr(ListVar1+"\","\")-1)
	direction = Left$(leap_command, 1)
	end_point = Mid$(leap_command, 2)

	keys = "{ctrl+f}"
	If direction = "d" Then
		keys = "{right}" + keys
	End If

	For index = 1 To UtilityProvider.ContextValueCount-1
		parameter = UtilityProvider.ContextValue(index)

		' get written form, treating list entries "\" and "backslash" as a backslash:
		printable = Left$(parameter,InStr(2, parameter +"\","\")-1)
		If printable = "backslash" Then
			printable = "\"
		End If
		keys = keys + printable
	Next

	' {alt+shift+:}{esc} here cancels a pop-up dialog box other than the find dialog box
	SendDragonKeys keys + "{alt+m}{alt+shift+:}" + direction + "{enter}{alt+f}{alt+shift+:}{esc}{esc}"
	' need to give Word time to close find dialog box
	SendDragonKeys end_point
End Sub
]]>
			</contents>
		</Command>

		<Command name="[g-leap-command] [printable]" group="on screen navigation" enabled="true" states="">
			<description>leap to first occurrence of named text in named direction</description>
			<contents type="SCRIPT">
<![CDATA[Sub Main
	leap_command = Left$(ListVar1,InStr(ListVar1+"\","\")-1)
	direction = Left$(leap_command, 1)
	end_point = Mid$(leap_command, 2)

	keys = "{ctrl+f}"
	If direction = "d" Then
		keys = "{right}" + keys
	End If

	For index = 1 To UtilityProvider.ContextValueCount-1
		parameter = UtilityProvider.ContextValue(index)

		' get written form, treating list entries "\" and "backslash" as a backslash:
		printable = Left$(parameter,InStr(2, parameter +"\","\")-1)
		If printable = "backslash" Then
			printable = "\"
		End If
		keys = keys + printable
	Next

	' {alt+shift+:}{esc} here cancels a pop-up dialog box other than the find dialog box
	SendDragonKeys keys + "{alt+m}{alt+shift+:}" + direction + "{enter}{alt+f}{alt+shift+:}{esc}{esc}"
	' need to give Word time to close find dialog box
	SendDragonKeys end_point
End Sub
]]>
			</contents>
		</Command>

	</Commands>

	<Commands type="application">
		<module>Rx</module>
		<company>WRQ, Inc.</company>
		<description>Reflection X for Windows 95 and Windows NT</description>

		<Command name="[leap-command] type [my-java-types]" group="on screen navigation" enabled="true" states="">
			<description>leap to first occurrence of my-java-types module package name</description>
			<contents type="SCRIPT">
<![CDATA[Sub Main
	Dim path As String
	path = Left$(ListVar2,InStr(ListVar2+"\","\")-1)
	path = Mid$(path, InStrRev(path, "/")+1)

	SendDragonKeys Left$(ListVar1,InStr(ListVar1+"\","\")-1)
	SendDragonKeys path
	SendDragonKeys "{right}"
End Sub
]]>
			</contents>
		</Command>

		<Command name="blue save" group="shell" enabled="true" states="">
			<description>save file then switch to window on far left then run make</description>
			<contents type="SCRIPT">
<![CDATA[Sub Main
	SendDragonKeys "{ctrl+x}{ctrl+s}"
	SetMousePosition 0, 40, 500
'	HeardWord "mouse", "click"
	Wait 1
	ButtonClick 1, 1
	Wait 1
	SendDragonKeys "{ctrl+c}q{ctrl+c}"
	SendDragonKeys "make{enter}"
End Sub
]]>
			</contents>
		</Command>

		<Command name="far leap method" group="far navigation" enabled="true" states="">
			<description>leap directly to entered method (case sensitive)</description>
			<contents type="SCRIPT">
<![CDATA[Sub Main
	Dim whitespace As String
	whitespace = "[ {ctrl+q}{tab}{ctrl+q}{ctrl+j}]"

	Dim Java_type As String
	Java_type = "[A-Zbcdfilsv][][a-zA-Z._0-9]*"	' excludes new, return

	' regexp leap from start of buffer:
'	SendDragonKeys "{esc}<"
'	SendDragonKeys "{esc}xnonincremental-re-search-forward{enter}"

	SendDragonKeys "{esc}xmdl-occur-no-fold{enter}"

	' Skip white space and any modifier keywords at start-of-line:
	SendDragonKeys "^\([a-z {ctrl+q}{tab}]*[ {ctrl+q}{tab}]\)?"

	SendDragonKeys Java_type + whitespace

	SendDragonKeys "([^)]*)" + "{left 7}"
End Sub
]]>
			</contents>
		</Command>

		<Command name="show fields" group="far navigation" enabled="true" states="">
			<description>open an occurs buffer with one entry per Java field/variable declaration in the current buffer</description>
			<contents type="SCRIPT">
<![CDATA[Sub Main
	keys = "{esc}xmdl-occur-no-fold{enter}"

	whitespace = "[ {ctrl+q}{tab}{ctrl+q}{ctrl+j}]"
	field_name = "[a-z_][a-zA-Z0-9_]*"	' we assume all fields start with a non-uppercase letter
	Java_type = "[A-Zbcdfilsv][][a-zA-Z._0-9]*"	' excludes new, return


	' Skip white space and any modifier keywords at start-of-line:
	keys = keys + "^\([a-z {ctrl+q}{tab}]*[ {ctrl+q}{tab}]\)?"

	' matches all fields and some variable declarations:
	keys = keys + Java_type + whitespace + "+" + field_name + "[][]*"
	keys = keys + "\(" + whitespace  + "*," + whitespace + "*" + field_name + "[][]*\)*"
	keys = keys + whitespace + "*[;=]"

	keys = keys + "{enter}"

	SendDragonKeys keys
End Sub
]]>
			</contents>
		</Command>

		<Command name="view split URL" group="lookup" enabled="true" states="">
			<description>attempt to view the nearest URL in the lookup browser when it is split into two lines</description>
			<contents type="SCRIPT">
<![CDATA[Sub Main
	' copy split URL:
	SendDragonKeys "{ctrl+u}1{ctrl+c}s\(http\|https\|file\):{right}{ctrl+space}"
	SendDragonKeys "{down}{home}"
	SendDragonKeys "{ctrl+u}1{ctrl+c}s[""<> ]\|${right}"
	SendDragonKeys "{ctrl+u}1{ctrl+r}\(http\|https\|file\):{right}{Esc}w"

	' create web page redirecting to that link:
	SendDragonKeys "{ctrl+x}b*l1*{Enter}{esc}<"
	SendDragonKeys "{ctrl+y}{Enter}<a href=""{ctrl+y}"">go there</a>{Enter}"
	SendDragonKeys "<meta http-equiv=""REFRESH"" content= ""0;url={ctrl+y}"">{enter}
	SendDragonKeys "{ctrl+space}{esc}>{ctrl+w}"
	SendDragonKeys "{esc}xmdl-export-buffer-to-l1{Enter}{ctrl+x}k{Enter}"

	' lookup that web page:
	AppBringUp "lookup", "IEXPLORE.EXE"
	Wait 3  ' needed to ensure application is accepting keystrokes
	SendDragonKeys "o{ctrl+o}\\spica\SRC udirs\mdl\Tmp\l1.html{enter}"
End Sub
]]>
			</contents>
		</Command>

		<Command name="view URL" group="lookup" enabled="true" states="">
			<description>attempt to view the nearest URL in the lookup browser</description>
			<contents type="SCRIPT">
<![CDATA[Sub Main
	' copy URL:
	SendDragonKeys "{ctrl+u}1{ctrl+c}s\(http\|https\|file\):{right}{ctrl+space}"
	SendDragonKeys "{ctrl+u}1{ctrl+c}s[""<> ]\|${right}{Esc}w"

	' create web page redirecting to that link:
	SendDragonKeys "{ctrl+x}b*l1*{Enter}{esc}<"
	SendDragonKeys "{ctrl+y}{Enter}<a href=""{ctrl+y}"">go there</a>{Enter}"
	SendDragonKeys "<meta http-equiv=""REFRESH"" content= ""0;url={ctrl+y}"">{enter}
	SendDragonKeys "{ctrl+space}{esc}>{ctrl+w}"
	SendDragonKeys "{esc}xmdl-export-buffer-to-l1{Enter}{ctrl+x}k{Enter}"

	' lookup that web page:
	AppBringUp "lookup", "IEXPLORE.EXE"
	Wait 3  ' needed to ensure application is accepting keystrokes
	SendDragonKeys "o{ctrl+o}\\spica\SRC udirs\mdl\Tmp\l1.html{enter}"
End Sub
]]>
			</contents>
		</Command>

		<Command name="show constructors" group="far navigation" enabled="true" states="">
			<description>open an occurs buffer with one entry per non-anonymous Java constructor in the current buffer</description>
			<contents type="SCRIPT">
<![CDATA[Sub Main
	keys = "{esc}xmdl-occur-no-fold{enter}"

	whitespace = "[ {ctrl+q}{tab}{ctrl+q}{ctrl+j}]"
	class_name = "[A-Z][a-zA-Z0-9_]*"	' we assume all class names start with an uppercase letter and that no methods do

	' Skip white space and any modifier keywords at start-of-line:
	keys = keys + "^\([a-z {ctrl+q}{tab}]*[ {ctrl+q}{tab}]\)?"

	keys = keys + class_name + " *([^)]*)" + whitespace + "*\({{}\|throws\)"  ' this misses most anonymous constructors
	keys = keys + "{enter}"

	SendDragonKeys keys

End Sub
]]>
			</contents>
		</Command>

		<Command name="show non-package fields" group="far navigation" enabled="true" states="">
			<description>open an occurs buffer with one entry per public/private/protected Java field in the current buffer</description>
			<contents type="SCRIPT">
<![CDATA[Sub Main
	keys = "{esc}xmdl-occur-no-fold{enter}"

	whitespace = "[ {ctrl+q}{tab}{ctrl+q}{ctrl+j}]"
	field_name = "[a-z_][a-zA-Z0-9_]*"	' we assume all fields start with a non-uppercase letter
	Java_type = "[A-Zbcdfilsv][][a-zA-Z._0-9]*"	' excludes new, return

	' Skip white space and any modifier keywords at start-of-line, requiring a keyword of private/public/protected:
	keys = keys + "^\([a-z {ctrl+q}{tab}]*[ {ctrl+q}{tab}]\)?\(private\|public\|protected\)[ {ctrl+q}{tab}]"
	keys = keys + "\([a-z {ctrl+q}{tab}]*[ {ctrl+q}{tab}]\)?"

	' matches all fields and some variable declarations:
	keys = keys + Java_type + whitespace + "+" + field_name + "[][]*"
	keys = keys + "\(" + whitespace  + "*," + whitespace + "*" + field_name + "[][]*\)*"
	keys = keys + whitespace + "*[;=]"

	keys = keys + "{enter}"

	SendDragonKeys keys
End Sub
]]>
			</contents>
		</Command>

		<Command name="new month" group="money" enabled="true" states="">
			<description></description>
			<contents type="SCRIPT">
<![CDATA[Sub Main
	SendDragonKeys "{enter 2}" & MonthName(Month(Now)) & "=" & Month(Now) & " (" & Year(Now) & "):{enter 2}"
End Sub
]]>
			</contents>
		</Command>

		<Command name="blue save repeat" group="shell" enabled="true" states="">
			<description>save file then switch to window on far left then repeat last command</description>
			<contents type="SCRIPT">
<![CDATA[Sub Main
	SendDragonKeys "{ctrl+x}{ctrl+s}"
	SetMousePosition 0, 40, 500
'	HeardWord "mouse", "click"
	Wait 1
	ButtonClick 1, 1
	Wait 1
	SendDragonKeys "{ctrl+c}q{ctrl+c}"
	SendDragonKeys "{up}{enter}"
End Sub
]]>
			</contents>
		</Command>

		<Command name="paste that" group="cut/copy" enabled="true" states="">
			<description>type Windows clipboard; do not use for long text, or text containing control characters, etc.</description>
			<contents type="SCRIPT">
<![CDATA[Sub Main
	clip = Clipboard()

	' remove carriage returns to convert to UNIX format:
	clip = Replace$(clip, Chr$(13), "")

	' alter characters so SendKeys doesn't get confused:
	clip = Replace$(clip, "{", "{{}")

	SendDragonKeys clip
End Sub
]]>
			</contents>
		</Command>

	</Commands>

	<Lists>

		<List name="printable">
			<Value><![CDATA[!]]></Value>
			<Value><![CDATA[!\bang]]></Value>
			<Value><![CDATA["]]></Value>
			<Value><![CDATA["\open  quote]]></Value>
			<Value><![CDATA["\quote]]></Value>
			<Value><![CDATA[#]]></Value>
			<Value><![CDATA[$]]></Value>
			<Value><![CDATA[%]]></Value>
			<Value><![CDATA[%\percent]]></Value>
			<Value><![CDATA[&]]></Value>
			<Value><![CDATA[']]></Value>
			<Value><![CDATA['\apostrophe]]></Value>
			<Value><![CDATA['\single quote]]></Value>
			<Value><![CDATA[(]]></Value>
			<Value><![CDATA[(\paren]]></Value>
			<Value><![CDATA[)]]></Value>
			<Value><![CDATA[)\close paren]]></Value>
			<Value><![CDATA[*]]></Value>
			<Value><![CDATA[*\asterisk]]></Value>
			<Value><![CDATA[*\star]]></Value>
			<Value><![CDATA[+]]></Value>
			<Value><![CDATA[+\plus]]></Value>
			<Value><![CDATA[,]]></Value>
			<Value><![CDATA[-]]></Value>
			<Value><![CDATA[-\minus]]></Value>
			<Value><![CDATA[.]]></Value>
			<Value><![CDATA[.\dot]]></Value>
			<Value><![CDATA[/]]></Value>
			<Value><![CDATA[0]]></Value>
			<Value><![CDATA[1]]></Value>
			<Value><![CDATA[2]]></Value>
			<Value><![CDATA[3]]></Value>
			<Value><![CDATA[4]]></Value>
			<Value><![CDATA[5]]></Value>
			<Value><![CDATA[6]]></Value>
			<Value><![CDATA[7]]></Value>
			<Value><![CDATA[8]]></Value>
			<Value><![CDATA[9]]></Value>
			<Value><![CDATA[:]]></Value>
			<Value><![CDATA[;]]></Value>
			<Value><![CDATA[<]]></Value>
			<Value><![CDATA[<\less than]]></Value>
			<Value><![CDATA[=]]></Value>
			<Value><![CDATA[=\equal]]></Value>
			<Value><![CDATA[=\equals]]></Value>
			<Value><![CDATA[>]]></Value>
			<Value><![CDATA[>\greater than]]></Value>
			<Value><![CDATA[?]]></Value>
			<Value><![CDATA[@]]></Value>
			<Value><![CDATA[[]]></Value>
			<Value><![CDATA[[\bracket]]></Value>
			<Value><![CDATA[]]]></Value>
			<Value><![CDATA[]\close bracket]]></Value>
			<Value><![CDATA[^]]></Value>
			<Value><![CDATA[_]]></Value>
			<Value><![CDATA[`]]></Value>
			<Value><![CDATA[a\Alpha]]></Value>
			<Value><![CDATA[b\Bravo]]></Value>
			<Value><![CDATA[backslash]]></Value>
			<Value><![CDATA[c\Charlie]]></Value>
			<Value><![CDATA[d\Delta]]></Value>
			<Value><![CDATA[e\echo]]></Value>
			<Value><![CDATA[f\foxtrot]]></Value>
			<Value><![CDATA[g\golf]]></Value>
			<Value><![CDATA[h\Hotel]]></Value>
			<Value><![CDATA[i\India]]></Value>
			<Value><![CDATA[j\Juliett]]></Value>
			<Value><![CDATA[k\kilo]]></Value>
			<Value><![CDATA[l\Lima]]></Value>
			<Value><![CDATA[m\Mike]]></Value>
			<Value><![CDATA[n\November]]></Value>
			<Value><![CDATA[o\Oscar]]></Value>
			<Value><![CDATA[p\Papa]]></Value>
			<Value><![CDATA[q\Quebec]]></Value>
			<Value><![CDATA[r\Romeo]]></Value>
			<Value><![CDATA[s\Sierra]]></Value>
			<Value><![CDATA[t\tango]]></Value>
			<Value><![CDATA[u\uniform]]></Value>
			<Value><![CDATA[v\Victor]]></Value>
			<Value><![CDATA[w\whiskey]]></Value>
			<Value><![CDATA[x\xray]]></Value>
			<Value><![CDATA[y\Yankee]]></Value>
			<Value><![CDATA[z\Zulu]]></Value>
			<Value><![CDATA[{space}\space]]></Value>
			<Value><![CDATA[{space}\space bar]]></Value>
			<Value><![CDATA[{{}\brace]]></Value>
			<Value><![CDATA[{{}\{]]></Value>
			<Value><![CDATA[|]]></Value>
			<Value><![CDATA[|\bar]]></Value>
			<Value><![CDATA[}]]></Value>
			<Value><![CDATA[}\close brace]]></Value>
			<Value><![CDATA[~]]></Value>
		</List>

		<List name="g-leap-command">
			<Value><![CDATA[d{left}\leap]]></Value>
			<Value><![CDATA[d{right}\leap after]]></Value>
			<Value><![CDATA[u{left}\retreat]]></Value>
		</List>

		<List name="leap-command">
			<Value><![CDATA[{ctrl+c}s\leap]]></Value>
			<Value><![CDATA[{ctrl+r}\retreat]]></Value>
		</List>

		<List name="my-java-types">
			<Value><![CDATA[COM/hp/elephantstore/protocol/MessageType\Message Type]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/protocol/ResponseError\Response Error]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/protocol/RequestEsStats\Request E. S. Stats]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/protocol/ResponseEsStats\Response E. S. Stats]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/protocol/Message\Message]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/protocol/SimpleClient\Simple Client]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/protocol/RequestUniqueVersionsSize\Request Unique Versions Size]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/protocol/ResponseQuery\Response Query]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/protocol/RequestReserveHDAGMultiple\Request Reserve age tag Multiple]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/protocol/ShortMessage\Short Message]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/protocol/ResponseReserveHDAGMultiple\Response Reserve age tag Multiple]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/protocol/RequestQuery\Request Query]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/protocol/RequestQueryMultiple\Request Query Multiple]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/protocol/ResponseQueryMultiple\Response Query Multiple]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/protocol/ResponseDeleteVersion\Response Delete Version]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/protocol/RequestDeleteVersion\Request Delete Version]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/protocol/RequestStoreMultiple\Request Store Multiple]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/protocol/RequestVStoreMultiple\Request Victor Store Multiple]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/protocol/ResponseStoreMultiple\Response Store Multiple]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/protocol/ResponseStore\Response Store]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/protocol/RequestVersionInfo\Request Version Info]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/protocol/RequestStore\Request Store]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/protocol/ResponseEnumerateVersions\Response Enumerate Versions]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/protocol/ResponseVStoreMultiple\Response Victor Store Multiple]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/protocol/RequestReserveMultiple\Request Reserve Multiple]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/protocol/ResponseVersionsSize\Response Versions Size]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/protocol/RequestEnumerateVersions\Request Enumerate Versions]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/protocol/ResponseReserveMultiple\Response Reserve Multiple]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/protocol/ResponseRetrieve\Response Retrieve]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/protocol/ResponseVersionInfo\Response Version Info]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/protocol/RequestRetrieve\Request Retrieve]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/protocol/RequestDifferentialVersionsSize\Request Differential Versions Size]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/protocol/RequestFinalizeVersion\Request Finalize Version]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/protocol/ResponseFinalizeVersion\Response Finalize Version]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/util/Assert\Assert]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/util/NotImplementedException\Not Implemented Exception]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/util/AssertionFailureException\Assertion Failure Exception]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/util/WorkerThread\Worker Thread]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/util/InterruptibleOperation\Interruptible Operation]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/util/AbortableOperation\Abortable Operation]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/util/Closable\Closable]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/blocks/Digest\Digest]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/blocks/LoggingWriter\Logging Writer]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/blocks/Block\Block]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/blocks/Version\Version]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/blocks/BlockWriter\Block Writer]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/blocks/CallerWriter\Caller Writer]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/blocks/SizingWriter\Sizing Writer]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/blocks/BlockStoreFailure\Block Store Failure]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/blocks/DFSPrefetcher\D. F. S. Prefetcher]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/blocks/MuxBlockReader\Mux Block Reader]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/blocks/BlockType\Block Type]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/blocks/CommunicationFailure\Communication Failure]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/blocks/StoreFullFailure\Store Full Failure]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/blocks/BlockReader\Block Reader]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/blocks/CallerReader\Caller Reader]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/blocks/SeqPrefetcher\sequential Prefetcher]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/blocks/InterruptionFailure\Interruption Failure]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/conversion/HexString\Hex String]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/conversion/Marshalable\Marshalable]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/conversion/BadlyFormatted\Badly Formatted]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/conversion/MarshalableString\Marshalable String]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/conversion/MarshalableMap\Marshalable Map]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/conversion/MarshalableKind\Marshalable Kind]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/conversion/MarshalableCollection\Marshalable Collection]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/conversion/MarshalableShort\Marshalable Short]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/conversion/MarshalableByteBuffer\Marshalable Byte Buffer]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/conversion/TooLongException\Too Long Exception]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/filesystem/LoggingVisitor\Logging Visitor]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/filesystem/HDAGContents\age tag Contents]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/filesystem/Descriptor\Descriptor]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/filesystem/FileCache\File Cache]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/filesystem/HDAGFold\age tag Fold]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/filesystem/Visitor\Visitor]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/filesystem/FileContents\File Contents]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/filesystem/DefaultVisitor\Default Visitor]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/filesystem/DiskContents\Disk Contents]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/filesystem/CollectingVisitor\Collecting Visitor]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/filesystem/HDAGWriterVisitor\age tag Writer Visitor]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/filesystem/CommandLineClient\Command Line Client]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/filesystem/PercentageProgress\Percentage Progress]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/filesystem/DiskWriterVisitor\Disk Writer Visitor]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/filesystem/Stats\Stats]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/filesystem/TwoStageFileCache\Two Stage File Cache]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/filesystem/Save\Save]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/filesystem/Manifest\Manifest]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/filesystem/MonitoredVisitor\Monitored Visitor]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/filesystem/DiskFilesystem\Disk Filesystem]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/filesystem/VirtualFilesystem\Virtual Filesystem]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/filesystem/HDAGFilesystem\age tag Filesystem]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/chunks/Divider\Divider]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/chunks/Chunker\Chunker]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/chunks/TTTDVectorDivider\triple-TD Vector Divider]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/chunks/IteratorChunker\Iterator Chunker]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/chunks/FromIterator\From Iterator]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/chunks/IndirectLayer\Indirect Layer]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/chunks/FixedLengthDivider\Fixed Length Divider]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/chunks/ByteBufferChunker\Byte Buffer Chunker]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/chunks/AppendChunkIterator\Append Chunk Iterator]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/chunks/ChunkIterator\Chunk Iterator]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/chunks/RabinFingerprint\Rabin Fingerprint]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/chunks/MapChunkIterator\Map Chunk Iterator]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/chunks/TTTDDivider\triple-TD Divider]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/chunks/TTTDByteBufferDivider\triple-TD Byte Buffer Divider]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/transport/RawCaller\Raw Caller]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/transport/Caller\Caller]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/transport/ServerChannelFactory\Server Channel Factory]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/transport/ChannelCaller\Channel Caller]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/transport/Blaster\Blaster]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/transport/RetryingCaller\Retrying Caller]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/transport/MobCaller\Mob Caller]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/transport/MobRelay\Mob Relay]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/transport/MobEndpoint\Mob Endpoint]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/transport/Connection\Connection]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/transport/FlowControl\Flow Control]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/transport/MobCallerEndpoint\Mob Caller Endpoint]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/framefactory/RequestStagingAreaVersion\Request Staging Area Version]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/framefactory/FileTransferRelay\File Transfer Relay]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/framefactory/TestRelayServer\Test Relay Server]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/framefactory/StagingArea\Staging Area]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/framefactory/RequestReportProgress\Request Report Progress]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/framefactory/EsFileTransferClient\E. S. File Transfer Client]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/framefactory/EsFileTransferServer\E. S. File Transfer Server]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/framefactory/NullFileTransferClientListener\Null File Transfer Client Listener]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/framefactory/EsUploadProgress\E. S. Upload Progress]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/framefactory/VFS\VFS]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/framefactory/EsFileTransfer\E. S. File Transfer]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/framefactory/TransferRefusedFailure\Transfer Refused Failure]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/framefactory/ExtendedResponseError\Extended Response Error]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/framefactory/EsFileTransferClientFactory\E. S. File Transfer Client Factory]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/framefactory/ResponseStagingAreaVersion\Response Staging Area Version]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/framefactory/InProgressFailure\In Progress Failure]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/framefactory/EsMessage\E. S. Message]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/framefactory/RequestVFSCopy\Request VFS Copy]]></Value>
			<Value><![CDATA[COM/hp/elephantstore/framefactory/VFSVersionID\VFS Version ID]]></Value>
			<Value><![CDATA[com/hp/ff/as/AssetManagerControllerImpl\Asset Manager Controller Impl]]></Value>
			<Value><![CDATA[com/hp/ff/as/AssetStore\Asset Store]]></Value>
			<Value><![CDATA[com/hp/ff/as/ContentTransferManager\Content Transfer Manager]]></Value>
			<Value><![CDATA[com/hp/ff/as/Download\Download]]></Value>
			<Value><![CDATA[com/hp/ff/as/FileTransferServer\File Transfer Server]]></Value>
			<Value><![CDATA[com/hp/ff/as/FileTransferServerListener\File Transfer Server Listener]]></Value>
			<Value><![CDATA[com/hp/ff/as/FrameStore\Frame Store]]></Value>
			<Value><![CDATA[com/hp/ff/as/PrefixFilter\Prefix Filter]]></Value>
			<Value><![CDATA[com/hp/ff/as/SFAS\SFAS]]></Value>
			<Value><![CDATA[com/hp/ff/as/SFASComponentInterface\SFAS Component Interface]]></Value>
			<Value><![CDATA[com/hp/ff/as/SFASMBean\SFASM Bean]]></Value>
			<Value><![CDATA[com/hp/ff/as/util/AsynchOperation\Asynch Operation]]></Value>
			<Value><![CDATA[com/hp/ff/as/util/AsynchOperationListener\Asynch Operation Listener]]></Value>
			<Value><![CDATA[com/hp/ff/as/util/ScheduledOperation\Scheduled Operation]]></Value>
			<Value><![CDATA[com/hp/ff/as/SFAS_StubMBean\SFAS_ Stub M Bean]]></Value>
			<Value><![CDATA[com/hp/ff/as/SourceContentTransferManager\Source Content Transfer Manager]]></Value>
			<Value><![CDATA[com/hp/ff/as/SourceContentTransferManagerListener\Source Content Transfer Manager Listener]]></Value>
			<Value><![CDATA[com/hp/ff/as/StartTransferResult\Start Transfer Result]]></Value>
			<Value><![CDATA[com/hp/ff/as/Upload\Upload]]></Value>
			<Value><![CDATA[com/hp/ff/as/VCVersionInfo\VC Version Info]]></Value>
			<Value><![CDATA[com/hp/ff/as/VersionCache\Version Cache]]></Value>
			<Value><![CDATA[com/hp/ff/as/VersionOperationManager\Version Operation Manager]]></Value>
			<Value><![CDATA[com/hp/ff/as/VersionStateMachine\Version State Machine]]></Value>
			<Value><![CDATA[com/hp/ff/as/VersionTransfer\Version Transfer]]></Value>
			<Value><![CDATA[com/hp/ff/as/test/ClientVersionTransfer\Client Version Transfer]]></Value>
			<Value><![CDATA[com/hp/ff/as/test/DownloadTestResult\Download Test Result]]></Value>
			<Value><![CDATA[com/hp/ff/as/test/FSJobStatisticsEvent\FS Job Statistics Event]]></Value>
			<Value><![CDATA[com/hp/ff/as/test/JobRemovedEvent\Job Removed Event]]></Value>
			<Value><![CDATA[com/hp/ff/as/test/JunitTestASBase\Junit Test AS Base]]></Value>
			<Value><![CDATA[com/hp/ff/as/test/JunitTestAssetStore\Junit Test Asset Store]]></Value>
			<Value><![CDATA[com/hp/ff/as/test/JunitTestDownload\Junit Test Download]]></Value>
			<Value><![CDATA[com/hp/ff/as/test/JunitTestRendering\Junit Test Rendering]]></Value>
			<Value><![CDATA[com/hp/ff/as/test/JunitTestStartup\Junit Test Startup]]></Value>
			<Value><![CDATA[com/hp/ff/as/test/JunitTestStartupFromClean\Junit Test Startup From Clean]]></Value>
			<Value><![CDATA[com/hp/ff/as/test/JunitTestUpload\Junit Test Upload]]></Value>
			<Value><![CDATA[com/hp/ff/as/test/JunitTestVersionOperations\Junit Test Version Operations]]></Value>
			<Value><![CDATA[com/hp/ff/as/test/PrepareDatabase\Prepare Database]]></Value>
			<Value><![CDATA[com/hp/ff/as/test/StopDownloadOnEvent\Stop Download On Event]]></Value>
			<Value><![CDATA[com/hp/ff/as/test/StopUploadOnEvent\Stop Upload On Event]]></Value>
			<Value><![CDATA[com/hp/ff/as/test/StorageNotificationEvent\Storage Notification Event]]></Value>
			<Value><![CDATA[com/hp/ff/as/test/TestAll\Test All]]></Value>
			<Value><![CDATA[com/hp/ff/as/test/TestClient\Test Client]]></Value>
			<Value><![CDATA[com/hp/ff/as/test/TestDirectoryCopy\Test Directory Copy]]></Value>
			<Value><![CDATA[com/hp/ff/as/test/TestJC\Test JC]]></Value>
			<Value><![CDATA[com/hp/ff/as/test/TestJCEvent\Test JC Event]]></Value>
			<Value><![CDATA[com/hp/ff/as/test/TestPN\Test PN]]></Value>
			<Value><![CDATA[com/hp/ff/as/test/UploadFailedInsufficientSpaceEvent\Upload Failed Insufficient Space Event]]></Value>
			<Value><![CDATA[com/hp/ff/as/test/UploadTestResult\Upload Test Result]]></Value>
			<Value><![CDATA[com/hp/ff/as/test/VersionDeletedEvent\Version Deleted Event]]></Value>
			<Value><![CDATA[com/hp/ff/as/test/VersionRestoredEvent\Version Restored Event]]></Value>
			<Value><![CDATA[com/hp/ff/as/test/VersionUpdateProgressEvent\Version Update Progress Event]]></Value>
			<Value><![CDATA[com/hp/ff/as/test/VersionUpdateStateEvent\Version Update State Event]]></Value>
			<Value><![CDATA[com/hp/ff/as/remote/ASBinder\AS Binder]]></Value>
			<Value><![CDATA[com/hp/ff/as/remote/ASBinderListener\AS Binder Listener]]></Value>
			<Value><![CDATA[com/hp/ff/as/remote/AssetStoreException\Asset Store Exception]]></Value>
			<Value><![CDATA[com/hp/ff/as/remote/AssetStoreInterface\Asset Store Interface]]></Value>
			<Value><![CDATA[com/hp/ff/as/remote/pn/ASPNProxy\ASPN Proxy]]></Value>
			<Value><![CDATA[com/hp/ff/as/remote/pn/AssetStoreContentVersionDistribution\Asset Store Content Version Distribution]]></Value>
			<Value><![CDATA[com/hp/ff/as/remote/pn/AssetStoreProcessingNodeOutput\Asset Store Processing Node Output]]></Value>
			<Value><![CDATA[com/hp/ff/as/remote/pn/ContentDistributionSetInfo\Content Distribution Set Info]]></Value>
			<Value><![CDATA[com/hp/ff/as/remote/pn/PutRenderedOutputResponse\Put Rendered Output Response]]></Value>
			<Value><![CDATA[com/hp/ff/as/remote/jc/AssetStoreJobControl\Asset Store Job Control]]></Value>
			<Value><![CDATA[com/hp/ff/as/remote/jc/AssetStoreListener\Asset Store Listener]]></Value>
			<Value><![CDATA[com/hp/ff/as/remote/jc/AssetStoreVersionDeletionPolicy\Asset Store Version Deletion Policy]]></Value>
			<Value><![CDATA[com/hp/ff/as/remote/jc/AssetStoreVersionManagement\Asset Store Version Management]]></Value>
			<Value><![CDATA[com/hp/ff/as/remote/jc/DeleteCompletionEvent\Delete Completion Event]]></Value>
			<Value><![CDATA[com/hp/ff/as/remote/jc/InsufficientSpaceException\Insufficient Space Exception]]></Value>
			<Value><![CDATA[com/hp/ff/as/remote/jc/RestoreCompletionEvent\Restore Completion Event]]></Value>
			<Value><![CDATA[com/hp/ff/as/proxy/AssetManagerProxy\Asset Manager Proxy]]></Value>
			<Value><![CDATA[com/hp/ff/as/proxy/AssetManagerProxyListener\Asset Manager Proxy Listener]]></Value>
			<Value><![CDATA[com/hp/ff/as/proxy/AssetManagerProxyMessage\Asset Manager Proxy Message]]></Value>
			<Value><![CDATA[com/hp/ff/as/proxy/GetSourceRequest\Get Source Request]]></Value>
			<Value><![CDATA[com/hp/ff/as/proxy/GetSourceResponse\Get Source Response]]></Value>
			<Value><![CDATA[com/hp/ff/as/proxy/PutRenderedOutputRequest\Put Rendered Output Request]]></Value>
			<Value><![CDATA[com/hp/ff/as/proxy/PutRenderedOutputResponse\Put Rendered Output Response]]></Value>
			<Value><![CDATA[com/hp/ff/as/proxy/ValidateSceneRequest\Validate Scene Request]]></Value>
			<Value><![CDATA[com/hp/ff/as/proxy/ValidateSceneResponse\Validate Scene Response]]></Value>
			<Value><![CDATA[com/hp/ff/as/info/FrameStatus\Frame Status]]></Value>
			<Value><![CDATA[com/hp/ff/as/info/VersionManifest\Version Manifest]]></Value>
			<Value><![CDATA[com/hp/ff/as/es/ESConnectorImpl\ES Connector Impl]]></Value>
			<Value><![CDATA[com/hp/ff/as/db/AsDbException\As Db Exception]]></Value>
			<Value><![CDATA[com/hp/ff/as/db/AsDbListener\As Db Listener]]></Value>
			<Value><![CDATA[com/hp/ff/as/db/AssetStoreDatabaseManager\Asset Store Database Manager]]></Value>
			<Value><![CDATA[com/hp/ff/as/db/AssetStoreDatabaseManagerListener\Asset Store Database Manager Listener]]></Value>
			<Value><![CDATA[com/hp/ff/as/clientrelay/RelayClientDisconnected\Relay Client Disconnected]]></Value>
			<Value><![CDATA[com/hp/ff/as/clientrelay/RelayClientSend\Relay Client Send]]></Value>
			<Value><![CDATA[com/hp/ff/as/clientrelay/RelayMessage\Relay Message]]></Value>
			<Value><![CDATA[com/hp/ff/as/clientrelay/RelayServerReply\Relay Server Reply]]></Value>
			<Value><![CDATA[com/hp/ff/as/clientrelay/RelayServerSend\Relay Server Send]]></Value>
			<Value><![CDATA[com/hp/ff/as/clientrelay/RelayService\Relay Service]]></Value>
			<Value><![CDATA[com/hp/ff/as/clientrelay/TransferRelay\Transfer Relay]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/ApplicationLogDescriptor\Application Log Descriptor]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/AssetManagerClientMessage\Asset Manager Client Message]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/DirectoryManifest\Directory Manifest]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/DirectoryManifestResult\Directory Manifest Result]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/DownloadTransfer\Download Transfer]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/DownloadTransferListener\Download Transfer Listener]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/DownloadTransferRequest\Download Transfer Request]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/DownloadTransferResult\Download Transfer Result]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/DownloadTransferStartedEvent\Download Transfer Started Event]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/FFFileTransferClientFactory\FF File Transfer Client Factory]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/FileTransferClient\File Transfer Client]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/FileTransferClientDirectoryScanResult\File Transfer Client Directory Scan Result]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/FileTransferClientFactory\File Transfer Client Factory]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/FileTransferClientListener\File Transfer Client Listener]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/FileTransferClientManager\File Transfer Client Manager]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/FrameDescriptor\Frame Descriptor]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/NoTransferInProgressException\No Transfer In Progress Exception]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/OutputContentDescriptor\Output Content Descriptor]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/RestoreTransferRequest\Restore Transfer Request]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/SourceContentTransfer\Source Content Transfer]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/TransferException\Transfer Exception]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/SourceContentTransferListener\Source Content Transfer Listener]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/SourceContentTransferRequest\Source Content Transfer Request]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/TransferInProgressException\Transfer In Progress Exception]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/UploadState\Upload State]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/UploadTransfer\Upload Transfer]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/UploadTransferRequest\Upload Transfer Request]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/messages/ContentDescriptor\Content Descriptor]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/messages/DownloadContentRequest\Download Content Request]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/messages/DownloadContentResponse\Download Content Response]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/messages/DownloadControl\Download Control]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/messages/DownloadData\Download Data]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/messages/TransferMessage\Transfer Message]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/messages/UploadContentRequest\Upload Content Request]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/messages/UploadContentResponse\Upload Content Response]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/messages/UploadControl\Upload Control]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/messages/UploadData\Upload Data]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/messages/UploadSynchronizeRequest\Upload Synchronize Request]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/messages/UploadSynchronizeResponse\Upload Synchronize Response]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/messages/version/CompleteVersionRequest\Complete Version Request]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/messages/version/CompleteVersionResponse\Complete Version Response]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/messages/version/UploadVersionControl\Upload Version Control]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/messages/version/UploadVersionRequest\Upload Version Request]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/messages/version/UploadVersionResponse\Upload Version Response]]></Value>
			<Value><![CDATA[com/hp/ff/as/client/messages/version/VersionTransferMessage\Version Transfer Message]]></Value>
		</List>

		<List name="1to100">
			<Value><![CDATA[1]]></Value>
			<Value><![CDATA[10]]></Value>
			<Value><![CDATA[100]]></Value>
			<Value><![CDATA[11]]></Value>
			<Value><![CDATA[12]]></Value>
			<Value><![CDATA[13]]></Value>
			<Value><![CDATA[14]]></Value>
			<Value><![CDATA[15]]></Value>
			<Value><![CDATA[16]]></Value>
			<Value><![CDATA[17]]></Value>
			<Value><![CDATA[18]]></Value>
			<Value><![CDATA[19]]></Value>
			<Value><![CDATA[2]]></Value>
			<Value><![CDATA[20]]></Value>
			<Value><![CDATA[21]]></Value>
			<Value><![CDATA[22]]></Value>
			<Value><![CDATA[23]]></Value>
			<Value><![CDATA[24]]></Value>
			<Value><![CDATA[25]]></Value>
			<Value><![CDATA[26]]></Value>
			<Value><![CDATA[27]]></Value>
			<Value><![CDATA[28\twenty-eight]]></Value>
			<Value><![CDATA[29]]></Value>
			<Value><![CDATA[3]]></Value>
			<Value><![CDATA[30]]></Value>
			<Value><![CDATA[31]]></Value>
			<Value><![CDATA[32]]></Value>
			<Value><![CDATA[33]]></Value>
			<Value><![CDATA[34]]></Value>
			<Value><![CDATA[35]]></Value>
			<Value><![CDATA[36]]></Value>
			<Value><![CDATA[37]]></Value>
			<Value><![CDATA[38]]></Value>
			<Value><![CDATA[39]]></Value>
			<Value><![CDATA[4]]></Value>
			<Value><![CDATA[40]]></Value>
			<Value><![CDATA[41]]></Value>
			<Value><![CDATA[42]]></Value>
			<Value><![CDATA[43]]></Value>
			<Value><![CDATA[44]]></Value>
			<Value><![CDATA[45]]></Value>
			<Value><![CDATA[46]]></Value>
			<Value><![CDATA[47]]></Value>
			<Value><![CDATA[48]]></Value>
			<Value><![CDATA[49]]></Value>
			<Value><![CDATA[5]]></Value>
			<Value><![CDATA[50]]></Value>
			<Value><![CDATA[51]]></Value>
			<Value><![CDATA[52]]></Value>
			<Value><![CDATA[53\fifty-three]]></Value>
			<Value><![CDATA[54]]></Value>
			<Value><![CDATA[55]]></Value>
			<Value><![CDATA[56]]></Value>
			<Value><![CDATA[57]]></Value>
			<Value><![CDATA[58]]></Value>
			<Value><![CDATA[59]]></Value>
			<Value><![CDATA[6]]></Value>
			<Value><![CDATA[60]]></Value>
			<Value><![CDATA[61]]></Value>
			<Value><![CDATA[62]]></Value>
			<Value><![CDATA[63]]></Value>
			<Value><![CDATA[64]]></Value>
			<Value><![CDATA[65]]></Value>
			<Value><![CDATA[66]]></Value>
			<Value><![CDATA[67]]></Value>
			<Value><![CDATA[68]]></Value>
			<Value><![CDATA[69]]></Value>
			<Value><![CDATA[7]]></Value>
			<Value><![CDATA[70]]></Value>
			<Value><![CDATA[71]]></Value>
			<Value><![CDATA[72]]></Value>
			<Value><![CDATA[73]]></Value>
			<Value><![CDATA[74]]></Value>
			<Value><![CDATA[75\seventy-five]]></Value>
			<Value><![CDATA[76]]></Value>
			<Value><![CDATA[77]]></Value>
			<Value><![CDATA[78]]></Value>
			<Value><![CDATA[79]]></Value>
			<Value><![CDATA[8]]></Value>
			<Value><![CDATA[80]]></Value>
			<Value><![CDATA[81]]></Value>
			<Value><![CDATA[82]]></Value>
			<Value><![CDATA[83]]></Value>
			<Value><![CDATA[84]]></Value>
			<Value><![CDATA[85]]></Value>
			<Value><![CDATA[86]]></Value>
			<Value><![CDATA[87]]></Value>
			<Value><![CDATA[88]]></Value>
			<Value><![CDATA[89]]></Value>
			<Value><![CDATA[9]]></Value>
			<Value><![CDATA[90]]></Value>
			<Value><![CDATA[91]]></Value>
			<Value><![CDATA[92]]></Value>
			<Value><![CDATA[93]]></Value>
			<Value><![CDATA[94]]></Value>
			<Value><![CDATA[95\ninety-five]]></Value>
			<Value><![CDATA[96]]></Value>
			<Value><![CDATA[97]]></Value>
			<Value><![CDATA[98]]></Value>
			<Value><![CDATA[99\ninety-nine]]></Value>
		</List>

		<List name="word-compass-rose">
			<Value><![CDATA[+ed\zap]]></Value>
			<Value><![CDATA[+em\jump]]></Value>
			<Value><![CDATA[+sd\PullWord]]></Value>
			<Value><![CDATA[-sd\kill]]></Value>
			<Value><![CDATA[-sm\skip]]></Value>
		</List>

	</Lists>

</MyCommands>
